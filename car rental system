#include <iostream>
#include <fstream>
#include <chrono>
#include <ctime>
using namespace std;

class CarRentalSystem {
private:
    struct Cars {
        string mark[10] = {"Hyundai", "BMW", "Mercedes", "Audi", "Tesla", "Skoda", "Volkswagen", "Toyota", "Ford"};
        string model[10] = {"2016MD", "2018AS", "2018DS", "2017LA", "2018OW", "2005Ps", "2008PW", "2010QW", "2016SA"};
        string color[10] = {"Red", "black", "yellow", "Blue", "Red", "Brown", "Silver", "Black", "grey"};
        string max_speed[10] = {"100 Km/h ", "150 Km/h", "150 Km/h", "170 Km/h", "130 Km/h", "140 Km/h", "130 Km/h", "120 Km/h", "150 Km/h"};
        int price[10] = {100, 200, 300, 500, 200, 250, 400, 600, 900};
        int date[10] = {2010, 2012, 2013, 2017, 2018, 2005, 2008, 2010, 2014};
    };

    struct Lessee {
        string Name[10];
        string Natio_ID[10];
        int payment_acc[10];
    };

    Cars car;
    Lessee lessee;

    void displayMenu() {
        int num = 1;
        for (int i = 0; i < 9; ++i) {
            cout << "\t\t\t";
            cout << "Enter " << num << "\t- To Select  " << car.mark[i] << endl;
            num++;
        }
    }

    void displayCarDetails(int theChoice) {
        system("CLS");
        cout << "\n\n\n\t\t\t-----------------------------\n";
        cout << "\t\t\tYou Have Selected - " << car.mark[theChoice - 1] << endl;
        cout << "\t\t\t-----------------------------\n\n\n";
        cout << "\t\t\tModel : " << car.model[theChoice - 1] << endl;
        cout << "\t\t\tColor : " << car.color[theChoice - 1] << endl;
        cout << "\t\t\tMaximum Speed : " << car.max_speed[theChoice - 1] << endl;
        cout << "\t\t\tPrice : " << car.price[theChoice - 1] << "K" << endl;
    }

    void checkCredit(int j) {
        if (lessee.payment_acc[j] >= car.price[j])
            cout << "\n\n\n\t\t\tProcess has been done successfully!! " << endl;
        else
            cout << "\n\n\n\t\t\tNot Available " << endl;
    }

    void userInput(int theChoice) {
        system("CLS");
        int j = theChoice - 1;
        cout << "\t\t\t----------------------------------------\n";
        cout << "\t\t\tPlease Provide Your Personal Details  : \n";
        cout << "\t\t\t----------------------------------------\n\n";
        cout << "\n\tNOTE: PROVIDE FIRST NAME ONLY, DONOT ENTER SPACE WHILE PROVIDING NAME,\n\tPAYMENT WON'T PROCEED IF THE GIVEN AMOUNT IS LESS THAN THE RATE OF CAR\n\n\n\n";
        cout << "\t\t\tEnter Your Name : ";
        cin >> lessee.Name[j];
        cout << "\t\t\tEnter Your National ID : ";
        cin >> lessee.Natio_ID[j];
        cout << "\t\t\tPayment Amount: ";
        cin >> lessee.payment_acc[j];

        checkCredit(j);
        generateBill(theChoice);
    }

    string getCurrentTimestampAndDate() {
        auto now = chrono::system_clock::now();
        time_t now_c = chrono::system_clock::to_time_t(now);
        char timestampAndDate[100];
        strftime(timestampAndDate, sizeof(timestampAndDate), "%Y-%m-%d %H:%M:%S", localtime(&now_c));
        return timestampAndDate;
    }

    void generateBill(int theChoice) {
        int j = theChoice - 1;

        ofstream billFile("bill.txt",ios::app);
        if (!billFile.is_open()) {
            cerr << "Error: Unable to open bill file." << endl;
            return;
        }
        string rentalTimestamp = getCurrentTimestampAndDate();
    
        
        billFile << "Timestamp and Date: " << getCurrentTimestampAndDate() << endl;

        
        billFile << "\n\n\t\t\t-----------------------------\n";
        billFile << "\t\t\tCar Rental Bill\n";
        billFile << "\t\t\t-----------------------------\n\n\n";
        billFile << "\t\t\tYou Have Rented - " << car.mark[j] << endl;
        billFile << "\t\t\tModel : " << car.model[j] << endl;
        billFile << "\t\t\tColor : " << car.color[j] << endl;
        billFile << "\t\t\tMaximum Speed : " << car.max_speed[j] << endl;
        billFile << "\t\t\tPrice : " << car.price[j] << "K" << endl;
        billFile << "\t\t\tLessee Name : " << lessee.Name[j] << endl;
        billFile << "Rental Timestamp and Date: " << rentalTimestamp << endl;
        billFile << "\t\t\tNational ID : " << lessee.Natio_ID[j] << endl;
        billFile << "\t\t\tPayment Amount : " << lessee.payment_acc[j] << endl;
        
        
        
         cout << "\n\n\t\t\t-----------------------------\n";
        cout << "\t\t\tCar Rental Bill\n";
        cout << "\t\t\t-----------------------------\n\n\n";
        cout << "\t\t\tYou Have Rented - " << car.mark[j] << endl;
        cout << "\t\t\tModel : " << car.model[j] << endl;
        cout << "\t\t\tColor : " << car.color[j] << endl;
        cout << "\t\t\tMaximum Speed : " << car.max_speed[j] << endl;
        cout << "\t\t\tPrice : " << car.price[j] << "K" << endl;
        cout << "\t\t\tLessee Name : " << lessee.Name[j] << endl;
        cout << "\t\t\tRental Timestamp and Date: " << rentalTimestamp << endl;
        cout << "\t\t\tNational ID : " << lessee.Natio_ID[j] << endl;
        cout << "\t\t\tPayment Amount : " << lessee.payment_acc[j] << endl;
        
         billFile.close();

        cout << "\n\n\t\t\tBill has been generated. Check 'bill.txt' for details." << endl;
    }

public:
    void run() {
        string decide1 = "yes";
        string decide2 = "yes";
        cout << "\t\t\t----------------------------------------------\n";
        cout << "\t\t\t\tSIMPLE CAR RENTAL SYSTEM \n";
        cout << "\t\t\tWelcome to Our Company, Choose from the menu : " << endl;
        cout << "\t\t\t----------------------------------------------\n";

        while (decide1 != "no") {
            displayMenu();
            cout << "\n\n\n\t\t\tYour Choice: ";
            int theChoice;
            cin >> theChoice;
            displayCarDetails(theChoice);
            cout << "\n\n\n\t\t\tAre You Sure, you want to rent this Car? (yes /no ) : ";
            cin >> decide1;

            if (decide1 == "yes") {
                userInput(theChoice);
            } else if (decide1 == "no") {
                cout << "\nThank you for contacting us." << endl;
                break;
            } else {
                cout << "\nInvalid input. Please enter 'yes' or 'no'." << endl;
            }

            cout << "\n\n\t\t\tDo you want to rent another car? (yes/no) ";
            cin >> decide2;
            if (decide2 == "no") {
                cout << "\nThank you for contacting us." << endl;
                break;
            }
        }
    }
    void searchLessee() {
    cout << "\n\n\t\t\t----------------------------------------\n";
    cout << "\t\t\tSearch Lessee by National ID\n";
    cout << "\t\t\t----------------------------------------\n\n";
    string searchID;
    cout << "\t\t\tEnter National ID to search: ";
    cin >> searchID;

    ifstream billFile("bill.txt");
    if (!billFile.is_open()) {
        cerr << "Error: Unable to open bill file." << endl;
        return;
    }

    bool found = false;
    string line;
    while (getline(billFile, line)) {
        size_t pos = line.find("National ID : " + searchID);
        if (pos != string::npos) {
            found = true;
            cout << "\n\n\t\t\t-----------------------------\n";
            cout << "\t\t\tCar Rental Bill\n";
            cout << "\t\t\t-----------------------------\n\n";
            while (getline(billFile, line) && line != "") {
                cout << line << endl;  // Print each line of the bill until an empty line is encountered
            }
            break;
        }
    }

    if (!found) {
        cout << "\n\n\t\t\tLessee with National ID " << searchID << " not found." << endl;
    }

    billFile.close();
}

};

int main() {
    CarRentalSystem carRental;
    carRental.run();
    carRental.searchLessee();
    return 0;
}
